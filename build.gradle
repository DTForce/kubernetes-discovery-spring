buildscript {
    ext {
        springBootVersion = '2.0.0.RC1'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.10.RELEASE'
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

bootRepackage {
    enabled = false
}

dependencyManagement {
    dependencies {
        dependency 'org.springframework.boot:spring-boot-autoconfigure:2.0.0.M6'
        dependency 'org.springframework:spring-context:5.0.3.RELEASE'
        dependency 'org.springframework.cloud:spring-cloud-commons:2.0.0.M6'
        dependency 'com.netflix.ribbon:ribbon-loadbalancer:2.2.4'
        dependency 'io.fabric8:kubernetes-client:3.1.8'
        dependency 'io.fabric8:kubernetes-server-mock:3.1.8'
        dependency 'org.assertj:assertj-core:3.9.0'
    }
}

dependencies {
    // Spring + Spring Cloud
    compile('org.springframework.boot:spring-boot-autoconfigure')
    compile('org.springframework:spring-context')
    compile('org.springframework.cloud:spring-cloud-commons')
    compile('com.netflix.ribbon:ribbon-loadbalancer')

    // Kubernetes Client
    compile('io.fabric8:kubernetes-client')

    // Annotation Processor
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    // test dependencies
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.fabric8:kubernetes-server-mock')
    testCompile('org.assertj:assertj-core')
}

compileJava.dependsOn(processResources)

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            def travisTag = System.env["TRAVIS_TAG"]
            def travisBranch = System.env["TRAVIS_BRANCH"]
            def snapshotVersion = (travisBranch != null ? (travisBranch.toUpperCase() + "-SNAPSHOT") : "SNAPSHOT")
            def versionNumber = (travisTag != null ? travisTag : snapshotVersion)

            groupId "com.dtforce"
            artifactId "kubernetes-discovery-spring"
            version(versionNumber)

            from components.java

            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
    repositories {
        maven {
            url System.env['MAVEN_REPO_URL'];
            credentials {
                username(System.env['MAVEN_USER'])
                password(System.env['MAVEN_PASSWORD'])
            }
        }
    }
}
